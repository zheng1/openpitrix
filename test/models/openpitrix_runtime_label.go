// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OpenpitrixRuntimeLabel openpitrix runtime label
// swagger:model openpitrixRuntimeLabel
type OpenpitrixRuntimeLabel struct {

	// create time
	// Format: date-time
	CreateTime strfmt.DateTime `json:"create_time,omitempty"`

	// label key
	LabelKey string `json:"label_key,omitempty"`

	// label value
	LabelValue string `json:"label_value,omitempty"`

	// runtime id
	RuntimeID string `json:"runtime_id,omitempty"`

	// runtime label id
	RuntimeLabelID string `json:"runtime_label_id,omitempty"`
}

// Validate validates this openpitrix runtime label
func (m *OpenpitrixRuntimeLabel) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreateTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OpenpitrixRuntimeLabel) validateCreateTime(formats strfmt.Registry) error {

	if swag.IsZero(m.CreateTime) { // not required
		return nil
	}

	if err := validate.FormatOf("create_time", "body", "date-time", m.CreateTime.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OpenpitrixRuntimeLabel) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OpenpitrixRuntimeLabel) UnmarshalBinary(b []byte) error {
	var res OpenpitrixRuntimeLabel
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
